services:
  server:
    container_name: nestjs
    build: .
    hostname: nestjs
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    networks:
      - nestjs-network
    volumes:
      - ./:/app
      - .env/:/app
    restart: unless-stopped
    depends_on:
      - mongodb
      - mongodb-test
  mongodb:
    container_name: mongodb
    image: mongo:5
    hostname: mongo
    ports:
      - 27017:27017
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$DATABASE_ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=$DATABASE_ADMIN_PWD
      - MONGO_INITDB_DATABASE=$DATABASE_NAME
      - MONGO_INITDB_USERNAME=$DATABASE_USER
      - MONGO_INITDB_PASSWORD=$DATABASE_USER_PWD
    volumes:
      - ./addons/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - dbdata:/data/db
    restart: unless-stopped
    networks:
      - nestjs-network
  mongodb-test:
    container_name: mongodb-test
    image: mongo:5
    hostname: mongo-test
    ports:
      - 27018:27017
    env_file:
      - .env.test
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$DATABASE_ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=$DATABASE_ADMIN_PWD
      - MONGO_INITDB_DATABASE=$DATABASE_NAME
      - MONGO_INITDB_USERNAME=$DATABASE_USER
      - MONGO_INITDB_PASSWORD=$DATABASE_USER_PWD
    volumes:
      - ./addons/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
      - dbdata-test:/data/db
    restart: unless-stopped
    networks:
      - nestjs-test-network
networks:
  nestjs-network:
    driver: bridge
  nestjs-test-network:
    driver: bridge
volumes:
  dbdata:
  dbdata-test:
