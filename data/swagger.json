{
  "openapi": "3.0.0",
  "paths": {
    "/api/hello": {
      "get": {
        "operationId": "AppController_hello",
        "summary": "hello",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko",
              "example": "Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935763, "example": 1688787935763, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "app.hello" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/AppHelloSerialization" }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["hello"]
      }
    },
    "/api/hello/api-key": {
      "get": {
        "operationId": "AppController_helloApiKey",
        "summary": "hello",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7.4; rv:10.2) Gecko/20100101 Firefox/10.2.6",
              "example": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.7.4; rv:10.2) Gecko/20100101 Firefox/10.2.6",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935765, "example": 1688787935765, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "app.helloApiKey" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/AppHelloSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "request.error.userAgentInvalid" },
                        "statusCode": { "type": "number", "example": 5073 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "request.error.userAgentBrowserInvalid" },
                        "statusCode": { "type": "number", "example": 5074 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "request.error.userAgentOsInvalid" },
                        "statusCode": { "type": "number", "example": 5073 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "request.error.timestampInvalid" },
                        "statusCode": { "type": "number", "example": 5071 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["hello"],
        "security": [{ "apiKey": [] }]
      }
    },
    "/api/public/message/languages": {
      "get": {
        "operationId": "MessagePublicController_languages",
        "summary": "common.public.message",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Opera/9.99 (Windows NT 5.0; U; KA Presto/2.9.179 Version/11.00)",
              "example": "Opera/9.99 (Windows NT 5.0; U; KA Presto/2.9.179 Version/11.00)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935834, "example": 1688787935834, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.languages" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/MessageLanguageSerialization" }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.public.message"]
      }
    },
    "/api/v1/public/user/login": {
      "post": {
        "operationId": "UserPublicController_login",
        "summary": "modules.public.user",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Opera/9.80 (Macintosh; Intel Mac OS X 10.8.3 U; SQ Presto/2.9.164 Version/12.00)",
              "example": "Opera/9.80 (Macintosh; Intel Mac OS X 10.8.3 U; SQ Presto/2.9.164 Version/12.00)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935839, "example": 1688787935839, "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UserLoginDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "user.login" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/UserLoginSerialization" }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "request.validation" },
                    "statusCode": { "type": "number", "example": 5070 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.public.user"]
      }
    },
    "/api/v1/public/user/sign-up": {
      "post": {
        "operationId": "UserPublicController_signUp",
        "summary": "modules.public.user",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Opera/10.18 (X11; Linux i686; U; JA Presto/2.9.174 Version/10.00)",
              "example": "Opera/10.18 (X11; Linux i686; U; JA Presto/2.9.174 Version/10.00)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935840, "example": 1688787935840, "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UserSignUpDto" } }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "user.signUp" },
                    "statusCode": { "type": "number", "example": 201 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "request.validation" },
                    "statusCode": { "type": "number", "example": 5070 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.public.user"]
      }
    },
    "/api/v1/admin/role/list": {
      "get": {
        "operationId": "RoleAdminController_list",
        "summary": "modules.admin.role",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (X11; Linux x86_64 AppleWebKit/537.0.1 (KHTML, like Gecko) Chrome/31.0.850.0 Safari/537.0.1",
              "example": "Mozilla/5.0 (X11; Linux x86_64 AppleWebKit/537.0.1 (KHTML, like Gecko) Chrome/31.0.850.0 Safari/537.0.1",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935814, "example": 1688787935814, "type": "string" }
          },
          {
            "name": "isActive",
            "required": true,
            "in": "query",
            "allowEmptyValue": false,
            "example": "true,false",
            "description": "boolean value with ',' delimiter",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "allowEmptyValue": false,
            "example": "SUPER_ADMIN,USER,ADMIN",
            "description": "enum value with ',' delimiter",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive",
            "schema": { "type": "string" }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": 20,
            "description": "Data per page, max 100",
            "schema": { "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": 1,
            "description": "page number, max 20",
            "schema": { "type": "number" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": "createdAt",
            "description": "Order by base on _metadata.pagination.availableOrderBy",
            "schema": { "type": "string" }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": "asc",
            "description": "Order direction base on _metadata.pagination.availableOrderDirection",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponsePagingSerialization" }],
                  "properties": {
                    "message": { "example": "role.list" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/RoleListSerialization" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.role"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/role/get/{role}": {
      "get": {
        "operationId": "RoleAdminController_get",
        "summary": "modules.admin.role",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Opera/11.79 (X11; Linux x86_64; U; LA Presto/2.9.177 Version/11.00)",
              "example": "Opera/11.79 (X11; Linux x86_64; U; LA Presto/2.9.177 Version/11.00)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935815, "example": 1688787935815, "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "4e4653b4-e518-465a-b429-cfed9115c953",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.get" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/RoleGetSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.notFound" },
                    "statusCode": { "type": "number", "example": 5100 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.role"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/role/create": {
      "post": {
        "operationId": "RoleAdminController_create",
        "summary": "modules.admin.role",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Windows; U; Windows NT 6.2)AppleWebKit/537.0.1 (KHTML, like Gecko) Version/6.0.10 Safari/537.0.1",
              "example": "Mozilla/5.0 (Windows; U; Windows NT 6.2)AppleWebKit/537.0.1 (KHTML, like Gecko) Version/6.0.10 Safari/537.0.1",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935816, "example": 1688787935816, "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoleCreateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.create" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ResponseIdSerialization" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.exist" },
                    "statusCode": { "type": "number", "example": 5102 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "request.validation" },
                    "statusCode": { "type": "number", "example": 5070 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.role"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/role/update/{role}": {
      "put": {
        "operationId": "RoleAdminController_update",
        "summary": "modules.admin.role",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Windows; U; Windows NT 5.0)AppleWebKit/532.1.2 (KHTML, like Gecko) Version/6.1.1 Safari/532.1.2",
              "example": "Mozilla/5.0 (Windows; U; Windows NT 5.0)AppleWebKit/532.1.2 (KHTML, like Gecko) Version/6.1.1 Safari/532.1.2",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935816, "example": 1688787935816, "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "4e4653b4-e518-465a-b429-cfed9115c953",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RoleUpdateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.update" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/RoleUpdateSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.notFound" },
                    "statusCode": { "type": "number", "example": 5100 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.exist" },
                    "statusCode": { "type": "number", "example": 5102 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "request.validation" },
                    "statusCode": { "type": "number", "example": 5070 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.role"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/role/delete/{role}": {
      "delete": {
        "operationId": "RoleAdminController_delete",
        "summary": "modules.admin.role",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Macintosh; PPC Mac OS X 10_9_8 rv:5.0; NN) AppleWebKit/531.1.1 (KHTML, like Gecko) Version/5.1.7 Safari/531.1.1",
              "example": "Mozilla/5.0 (Macintosh; PPC Mac OS X 10_9_8 rv:5.0; NN) AppleWebKit/531.1.1 (KHTML, like Gecko) Version/5.1.7 Safari/531.1.1",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935817, "example": 1688787935817, "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "4e4653b4-e518-465a-b429-cfed9115c953",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.delete" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ResponseIdSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.notFound" },
                    "statusCode": { "type": "number", "example": 5100 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.used" },
                    "statusCode": { "type": "number", "example": 5105 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.role"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/role/update/{role}/inactive": {
      "patch": {
        "operationId": "RoleAdminController_inActive",
        "summary": "modules.admin.role",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; .NET CLR 4.9.16601.8)",
              "example": "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; .NET CLR 4.9.16601.8)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935817, "example": 1688787935817, "type": "string" }
          },
          {
            "name": "role",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "4e4653b4-e518-465a-b429-cfed9115c953",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.inactive" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/RoleInActiveSerialization" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.isActiveInvalid" },
                    "statusCode": { "type": "number", "example": 5103 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "role.error.notFound" },
                    "statusCode": { "type": "number", "example": 5100 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.role"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/user/update/{user}/blocked": {
      "patch": {
        "operationId": "UserAdminController_blocked",
        "summary": "modules.admin.user",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Opera/13.54 (Macintosh; Intel Mac OS X 10.9.7 U; VO Presto/2.9.183 Version/12.00)",
              "example": "Opera/13.54 (Macintosh; Intel Mac OS X 10.9.7 U; VO Presto/2.9.183 Version/12.00)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935824, "example": 1688787935824, "type": "string" }
          },
          {
            "name": "user",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "83d5bdec-c143-4099-8352-79c6aff98be7",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "user.blocked" },
                    "statusCode": { "type": "number", "example": 200 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.user"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/user/update/{user}/active": {
      "patch": {
        "operationId": "UserAdminController_active",
        "summary": "modules.admin.user",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; .NET CLR 2.8.72879.1)",
              "example": "Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/5.0; .NET CLR 2.8.72879.1)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935825, "example": 1688787935825, "type": "string" }
          },
          {
            "name": "user",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "83d5bdec-c143-4099-8352-79c6aff98be7",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "user.active" },
                    "statusCode": { "type": "number", "example": 200 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.user"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/user/update/{user}/inactive": {
      "patch": {
        "operationId": "UserAdminController_inactive",
        "summary": "modules.admin.user",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.0; Trident/5.0; .NET CLR 1.0.92703.6)",
              "example": "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 5.0; Trident/5.0; .NET CLR 1.0.92703.6)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935825, "example": 1688787935825, "type": "string" }
          },
          {
            "name": "user",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "83d5bdec-c143-4099-8352-79c6aff98be7",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "user.inactive" },
                    "statusCode": { "type": "number", "example": 200 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.admin.user"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/list": {
      "get": {
        "operationId": "ApiKeyAdminController_list",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Opera/10.12 (X11; Linux x86_64; U; JV Presto/2.9.187 Version/12.00)",
              "example": "Opera/10.12 (X11; Linux x86_64; U; JV Presto/2.9.187 Version/12.00)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935787, "example": 1688787935787, "type": "string" }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": "true,false",
            "description": "boolean value with ',' delimiter",
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "description": "Search will base on _metadata.pagination._availableSearch with rule contains, and case insensitive",
            "schema": { "type": "string" }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": 20,
            "description": "Data per page, max 100",
            "schema": { "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": 1,
            "description": "page number, max 20",
            "schema": { "type": "number" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": "createdAt",
            "description": "Order by base on _metadata.pagination.availableOrderBy",
            "schema": { "type": "string" }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "allowEmptyValue": true,
            "example": "asc",
            "description": "Order direction base on _metadata.pagination.availableOrderDirection",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponsePagingSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.list" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ApiKeyListSerialization" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/get/{apiKey}": {
      "get": {
        "operationId": "ApiKeyAdminController_get",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Windows NT 5.2; rv:9.5) Gecko/20100101 Firefox/9.5.8",
              "example": "Mozilla/5.0 (Windows NT 5.2; rv:9.5) Gecko/20100101 Firefox/9.5.8",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935789, "example": 1688787935789, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.get" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ApiKeyGetSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/update/{apiKey}/reset": {
      "patch": {
        "operationId": "ApiKeyAdminController_reset",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (X11; Linux x86_64 AppleWebKit/535.0.2 (KHTML, like Gecko) Chrome/30.0.828.0 Safari/535.0.2",
              "example": "Mozilla/5.0 (X11; Linux x86_64 AppleWebKit/535.0.2 (KHTML, like Gecko) Chrome/30.0.828.0 Safari/535.0.2",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935790, "example": 1688787935790, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.reset" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ApiKeyResetSerialization" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.isActiveInvalid" },
                        "statusCode": { "type": "number", "example": 5022 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/update/{apiKey}/active": {
      "patch": {
        "operationId": "ApiKeyAdminController_active",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/538.2.1 (KHTML, like Gecko) Chrome/29.0.892.0 Safari/538.2.1",
              "example": "Mozilla/5.0 (X11; Linux i686 AppleWebKit/538.2.1 (KHTML, like Gecko) Chrome/29.0.892.0 Safari/538.2.1",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935791, "example": 1688787935791, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.active" },
                    "statusCode": { "type": "number", "example": 200 }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.isActiveInvalid" },
                        "statusCode": { "type": "number", "example": 5022 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/update/{apiKey}/inactive": {
      "patch": {
        "operationId": "ApiKeyAdminController_inActive",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (X11; Linux x86_64; rv:15.7) Gecko/20100101 Firefox/15.7.0",
              "example": "Mozilla/5.0 (X11; Linux x86_64; rv:15.7) Gecko/20100101 Firefox/15.7.0",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935792, "example": 1688787935792, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.inactive" },
                    "statusCode": { "type": "number", "example": 200 }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.isActiveInvalid" },
                        "statusCode": { "type": "number", "example": 5022 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/create": {
      "post": {
        "operationId": "ApiKeyAdminController_create",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_7 rv:6.0; SE) AppleWebKit/532.1.2 (KHTML, like Gecko) Version/5.1.2 Safari/532.1.2",
              "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_7 rv:6.0; SE) AppleWebKit/532.1.2 (KHTML, like Gecko) Version/5.1.2 Safari/532.1.2",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935792, "example": 1688787935792, "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ApiKeyCreateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.create" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ApiKeyCreateSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "request.validation" },
                    "statusCode": { "type": "number", "example": 5070 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/delete/{apiKey}": {
      "delete": {
        "operationId": "ApiKeyAdminController_delete",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_0)  AppleWebKit/538.1.2 (KHTML, like Gecko) Chrome/31.0.889.0 Safari/538.1.2",
              "example": "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_0)  AppleWebKit/538.1.2 (KHTML, like Gecko) Chrome/31.0.889.0 Safari/538.1.2",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935793, "example": 1688787935793, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.delete" },
                    "statusCode": { "type": "number", "example": 200 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/update/{apiKey}": {
      "put": {
        "operationId": "ApiKeyAdminController_updateName",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.3; Trident/7.0; .NET CLR 3.6.46873.4)",
              "example": "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.3; Trident/7.0; .NET CLR 3.6.46873.4)",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935793, "example": 1688787935793, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ApiKeyUpdateNameDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.updateName" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ResponseIdSerialization" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.isActiveInvalid" },
                        "statusCode": { "type": "number", "example": 5022 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "request.validation" },
                    "statusCode": { "type": "number", "example": 5070 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/admin/api-key/update/{apiKey}/date": {
      "put": {
        "operationId": "ApiKeyAdminController_updateDate",
        "summary": "common.admin.apiKey",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9.5; rv:13.0) Gecko/20100101 Firefox/13.0.5",
              "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9.5; rv:13.0) Gecko/20100101 Firefox/13.0.5",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935794, "example": 1688787935794, "type": "string" }
          },
          {
            "name": "apiKey",
            "required": true,
            "in": "path",
            "allowEmptyValue": false,
            "example": "3d75d171-29df-4192-a43a-5981945954aa",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ApiKeyUpdateDateDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.updateDate" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/ResponseIdSerialization" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.isActiveInvalid" },
                        "statusCode": { "type": "number", "example": 5022 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.accessTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5000 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "role.error.typeForbidden" },
                        "statusCode": { "type": "number", "example": 5101 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "policy.error.abilityForbidden" },
                        "statusCode": { "type": "number", "example": 50010 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "apiKey.error.notFound" },
                    "statusCode": { "type": "number", "example": 5021 }
                  }
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["common.admin.apiKey"],
        "security": [{ "accessToken": [] }, { "apiKey": [] }]
      }
    },
    "/api/v1/auth/user/refresh": {
      "post": {
        "operationId": "UserAuthController_refresh",
        "summary": "modules.auth.user",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "description": "User agent header",
            "required": false,
            "schema": {
              "default": "Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.8.5; rv:7.5) Gecko/20100101 Firefox/7.5.3",
              "example": "Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.8.5; rv:7.5) Gecko/20100101 Firefox/7.5.3",
              "type": "string"
            }
          },
          {
            "name": "x-custom-lang",
            "in": "header",
            "description": "Custom language header",
            "required": false,
            "schema": { "default": "en", "example": "en", "type": "string" }
          },
          {
            "name": "x-timestamp",
            "in": "header",
            "description": "Timestamp header, in microseconds",
            "required": false,
            "schema": { "default": 1688787935832, "example": 1688787935832, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "user.refresh" },
                    "statusCode": { "type": "number", "example": 200 },
                    "data": { "$ref": "#/components/schemas/UserRefreshSerialization" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "auth.error.refreshTokenUnauthorized" },
                        "statusCode": { "type": "number", "example": 5001 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.keyNeeded" },
                        "statusCode": { "type": "number", "example": 5020 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notFound" },
                        "statusCode": { "type": "number", "example": 5021 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.notActiveYet" },
                        "statusCode": { "type": "number", "example": 5023 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.expired" },
                        "statusCode": { "type": "number", "example": 5024 }
                      }
                    },
                    {
                      "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                      "properties": {
                        "message": { "example": "apiKey.error.invalid" },
                        "statusCode": { "type": "number", "example": 5025 }
                      }
                    }
                  ]
                }
              }
            }
          },
          "408": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.requestTimeout" },
                    "statusCode": { "type": "number", "example": 5052 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.internalServerError" },
                    "statusCode": { "type": "number", "example": 5050 }
                  }
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [{ "$ref": "#/components/schemas/ResponseDefaultSerialization" }],
                  "properties": {
                    "message": { "example": "http.serverError.serviceUnavailable" },
                    "statusCode": { "type": "number", "example": 5051 }
                  }
                }
              }
            }
          }
        },
        "tags": ["modules.auth.user"],
        "security": [{ "refreshToken": [] }, { "apiKey": [] }]
      }
    }
  },
  "info": {
    "title": "SpecFinderAPI APIs Specification",
    "description": "Section for describe whole APIs",
    "version": "1.0",
    "contact": {}
  },
  "tags": [{ "name": "API's", "description": "" }],
  "servers": [{ "url": "/" }, { "url": "/staging" }, { "url": "/prod" }],
  "components": {
    "securitySchemes": {
      "accessToken": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" },
      "refreshToken": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" },
      "apiKey": { "type": "apiKey", "in": "header", "name": "x-api-key" }
    },
    "schemas": {
      "ResponseDefaultSerialization": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "nullable": false,
            "description": "return specific status code for every endpoints",
            "example": 200
          },
          "message": {
            "nullable": false,
            "description": "Message base on language",
            "oneOf": [
              { "type": "string", "example": "message endpoint" },
              {
                "type": "object",
                "example": { "en": "This is test endpoint.", "id": "Ini adalah endpoint test" }
              }
            ]
          },
          "_metadata": {
            "type": "object",
            "nullable": false,
            "description": "Contain metadata about API",
            "example": {
              "languages": ["en"],
              "timestamp": 1660190937231,
              "timezone": "Asia/Jakarta",
              "requestId": "40c2f734-7247-472b-bc26-8eff6e669781",
              "path": "/api/v1/test/hello",
              "version": "1",
              "repoVersion": "1.0.0"
            }
          }
        },
        "required": ["statusCode", "message", "_metadata"]
      },
      "AppHelloSerialization": {
        "type": "object",
        "properties": {
          "userAgent": {
            "type": "object",
            "example": {
              "ua": "PostmanRuntime/7.29.0",
              "browser": {},
              "engine": {},
              "os": {},
              "device": {},
              "cpu": {}
            }
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "example": "2023-07-07T06:54:03.837Z"
          },
          "format": { "type": "string", "example": "2023-07-07T04:18:00.462Z" },
          "timestamp": { "type": "number", "example": 1660190937231 }
        },
        "required": ["userAgent", "date", "format", "timestamp"]
      },
      "MessageLanguageSerialization": {
        "type": "object",
        "properties": {
          "language": {
            "type": "array",
            "nullable": false,
            "items": { "type": "string", "enum": ["en", "th"] }
          }
        },
        "required": ["language"]
      },
      "UserLoginSerialization": {
        "type": "object",
        "properties": {
          "tokenType": { "type": "string", "example": "Bearer", "nullable": false },
          "expiresIn": {
            "type": "string",
            "example": 1660190937231,
            "description": "Expire in timestamp",
            "nullable": false
          },
          "accessToken": {
            "type": "string",
            "example": "T3ttZRRxt22m1RnEzIwtVlJ1nOy9bz",
            "description": "Will be valid JWT Encode string",
            "nullable": false
          },
          "refreshToken": {
            "type": "string",
            "example": "d2jHbi33cGy6WCPJQWOy0M3l5bqo99",
            "description": "Will be valid JWT Encode string",
            "nullable": false
          }
        },
        "required": ["tokenType", "expiresIn", "accessToken", "refreshToken"]
      },
      "UserLoginDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "Ramiro.Jakubowski32@gmail.com" },
          "password": {
            "type": "string",
            "description": "string password",
            "example": "tisuhWIYMB@@!123"
          }
        },
        "required": ["email", "password"]
      },
      "UserSignUpDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "Ramiro.Jakubowski32@gmail.com" },
          "firstName": { "type": "string", "example": "Isaias" },
          "userName": { "type": "string", "example": "Reign" },
          "lastName": { "type": "string", "example": "Strosin" },
          "mobileNumber": { "type": "string", "example": "62812275643066" },
          "password": {
            "type": "string",
            "description": "string password",
            "example": "tisuhWIYMB@@!123"
          }
        },
        "required": ["email", "firstName", "lastName", "mobileNumber", "password"]
      },
      "ResponsePagingSerialization": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "nullable": false,
            "description": "return specific status code for every endpoints",
            "example": 200
          },
          "message": {
            "nullable": false,
            "description": "Message base on language",
            "oneOf": [
              { "type": "string", "example": "message endpoint" },
              {
                "type": "object",
                "example": { "en": "This is test endpoint.", "id": "Ini adalah endpoint test" }
              }
            ]
          },
          "_metadata": {
            "type": "object",
            "nullable": false,
            "description": "Contain metadata about API",
            "example": {
              "languages": ["en"],
              "timestamp": 1660190937231,
              "timezone": "Asia/Jakarta",
              "requestId": "40c2f734-7247-472b-bc26-8eff6e669781",
              "path": "/api/v1/test/hello",
              "version": "1",
              "repoVersion": "1.0.0",
              "pagination": {
                "search": "Zelda",
                "page": 1,
                "perPage": 20,
                "orderBy": "createdAt",
                "orderDirection": "asc",
                "availableSearch": ["name"],
                "availableOrderBy": ["createdAt"],
                "availableOrderDirection": ["asc", "desc"],
                "total": 100,
                "totalPage": 5
              },
              "cursor": {
                "nextPage": "http://217.0.0.1/__path?perPage=10&page=3&search=abc",
                "previousPage": "http://217.0.0.1/__path?perPage=10&page=1&search=abc",
                "firstPage": "http://217.0.0.1/__path?perPage=10&page=1&search=abc",
                "lastPage": "http://217.0.0.1/__path?perPage=10&page=20&search=abc"
              }
            }
          }
        },
        "required": ["statusCode", "message", "_metadata"]
      },
      "RoleListSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of role",
            "example": "Customer Directives Consultant",
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Description of role",
            "example": "Delectus reiciendis officia quod incidunt voluptatem.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Active flag of role",
            "example": true,
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Representative for role type",
            "example": "ADMIN",
            "nullable": false
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date created at",
            "example": "2023-07-07T12:21:20.370Z",
            "nullable": false
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date updated at",
            "example": "2023-07-07T23:55:38.346Z",
            "nullable": false
          },
          "permissions": { "type": "number", "description": "count of permissions" }
        },
        "required": ["_id", "name", "isActive", "type", "createdAt", "updatedAt", "permissions"]
      },
      "RoleGetPermissionSerialization": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": false,
            "description": "Permission subject",
            "enum": ["API_KEY", "SETTING", "ROLE", "USER"],
            "example": "ROLE"
          },
          "action": {
            "type": "array",
            "nullable": false,
            "description": "Permission action base on subject",
            "default": ["manage", "read", "create", "update", "delete", "export", "import"],
            "example": ["export", "read", "import"],
            "items": {
              "type": "string",
              "enum": ["manage", "read", "create", "update", "delete", "export", "import"]
            }
          }
        },
        "required": ["subject", "action"]
      },
      "RoleGetSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of role",
            "example": "Customer Directives Consultant",
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Description of role",
            "example": "Delectus reiciendis officia quod incidunt voluptatem.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Active flag of role",
            "example": true,
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Representative for role type",
            "example": "ADMIN",
            "nullable": false
          },
          "permissions": {
            "nullable": false,
            "example": [
              {
                "subject": "SETTING",
                "action": ["delete", "export", "manage", "create", "update", "read", "import"]
              }
            ],
            "allOf": [{ "$ref": "#/components/schemas/RoleGetPermissionSerialization" }]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date created at",
            "example": "2023-07-07T12:21:20.370Z",
            "nullable": false
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date updated at",
            "example": "2023-07-07T23:55:38.346Z",
            "nullable": false
          }
        },
        "required": ["_id", "name", "isActive", "type", "permissions", "createdAt", "updatedAt"]
      },
      "ResponseIdSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          }
        },
        "required": ["_id"]
      },
      "RolePermissionsDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Permission subject",
            "enum": ["API_KEY", "SETTING", "ROLE", "USER"],
            "example": "API_KEY"
          },
          "action": {
            "type": "array",
            "description": "Permission action base on subject",
            "default": [],
            "example": ["update"],
            "items": {
              "type": "string",
              "enum": ["manage", "read", "create", "update", "delete", "export", "import"]
            }
          }
        },
        "required": ["subject", "action"]
      },
      "RoleCreateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of role",
            "example": "Minus enim ipsa dignissimos sequi error deserunt at voluptates.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of role",
            "example": "Internal Functionality Administrator"
          },
          "type": {
            "type": "string",
            "description": "Representative for role type",
            "example": "ADMIN"
          },
          "permissions": {
            "description": "Permission list of role",
            "default": [],
            "example": [{ "subject": "SETTING", "action": ["manage"] }],
            "type": "array",
            "items": { "$ref": "#/components/schemas/RolePermissionsDto" }
          }
        },
        "required": ["name", "type", "permissions"]
      },
      "RoleUpdateSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of role",
            "example": "Customer Directives Consultant",
            "nullable": false
          },
          "description": {
            "type": "string",
            "description": "Description of role",
            "example": "Delectus reiciendis officia quod incidunt voluptatem.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Active flag of role",
            "example": true,
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Representative for role type",
            "example": "ADMIN",
            "nullable": false
          },
          "permissions": {
            "nullable": false,
            "example": [
              {
                "subject": "SETTING",
                "action": ["delete", "export", "manage", "create", "update", "read", "import"]
              }
            ],
            "allOf": [{ "$ref": "#/components/schemas/RoleGetPermissionSerialization" }]
          }
        },
        "required": ["_id", "name", "isActive", "type", "permissions"]
      },
      "RoleUpdateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of role",
            "example": "Minus enim ipsa dignissimos sequi error deserunt at voluptates.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of role",
            "example": "Internal Functionality Administrator"
          },
          "type": {
            "type": "string",
            "description": "Representative for role type",
            "example": "ADMIN"
          },
          "permissions": {
            "description": "Permission list of role",
            "default": [],
            "example": [{ "subject": "SETTING", "action": ["manage"] }],
            "type": "array",
            "items": { "$ref": "#/components/schemas/RolePermissionsDto" }
          },
          "isActive": {
            "type": "boolean",
            "description": "Role active",
            "example": true,
            "nullable": false
          }
        }
      },
      "RoleInActiveSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "isActive": {
            "type": "boolean",
            "description": "Active flag of role",
            "example": false,
            "nullable": false
          }
        },
        "required": ["_id", "isActive"]
      },
      "ApiKeyListSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Alias name of api key",
            "example": "Chief Directives Strategist",
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Type of api key",
            "example": "PUBLIC",
            "nullable": false
          },
          "key": {
            "type": "string",
            "description": "Unique key of api key",
            "example": "uBeGBFsuosFFsOQ",
            "nullable": false
          },
          "isActive": {
            "type": "boolean",
            "description": "Active flag of api key",
            "example": true,
            "nullable": false
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key start date",
            "example": "2022-11-03T06:16:03.543Z",
            "nullable": true
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key end date",
            "example": "2023-09-04T04:22:10.119Z",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date created at",
            "example": "2023-07-07T19:01:59.446Z",
            "nullable": false
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date updated at",
            "example": "2023-07-07T06:35:29.948Z",
            "nullable": false
          }
        },
        "required": ["_id", "name", "type", "key", "isActive", "createdAt", "updatedAt"]
      },
      "ApiKeyGetSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Alias name of api key",
            "example": "Chief Directives Strategist",
            "nullable": false
          },
          "type": {
            "type": "string",
            "description": "Type of api key",
            "example": "PUBLIC",
            "nullable": false
          },
          "key": {
            "type": "string",
            "description": "Unique key of api key",
            "example": "uBeGBFsuosFFsOQ",
            "nullable": false
          },
          "isActive": {
            "type": "boolean",
            "description": "Active flag of api key",
            "example": true,
            "nullable": false
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key start date",
            "example": "2022-11-03T06:16:03.543Z",
            "nullable": true
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key end date",
            "example": "2023-09-04T04:22:10.119Z",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date created at",
            "example": "2023-07-07T19:01:59.446Z",
            "nullable": false
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date updated at",
            "example": "2023-07-07T06:35:29.948Z",
            "nullable": false
          }
        },
        "required": ["_id", "name", "type", "key", "isActive", "createdAt", "updatedAt"]
      },
      "ApiKeyResetSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "key": {
            "type": "string",
            "description": "Unique key of api key",
            "example": "uBeGBFsuosFFsOQ",
            "nullable": false
          },
          "secret": {
            "type": "string",
            "description": "Secret key of ApiKey, only show at once",
            "example": "PsOPBAThx4vQBIOkQbEc"
          }
        },
        "required": ["_id", "key", "secret"]
      },
      "ApiKeyCreateSerialization": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Id that representative with your target data",
            "example": "631d9f32a65cf07250b8938c",
            "nullable": false
          },
          "key": {
            "type": "string",
            "description": "Unique key of api key",
            "example": "uBeGBFsuosFFsOQ",
            "nullable": false
          },
          "secret": {
            "type": "string",
            "description": "Secret key of ApiKey, only show at once",
            "example": "PsOPBAThx4vQBIOkQbEc"
          }
        },
        "required": ["_id", "key", "secret"]
      },
      "ApiKeyCreateDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key start date",
            "example": "2023-07-07T20:26:41.200Z",
            "nullable": true
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key end date",
            "example": "2024-04-28T17:48:58.284Z",
            "nullable": true
          },
          "name": { "type": "string", "description": "Api Key name", "example": "testapiname" },
          "type": {
            "type": "string",
            "description": "Api Key name",
            "example": "PUBLIC",
            "enum": ["SERVICE", "PUBLIC"]
          }
        },
        "required": ["name", "type"]
      },
      "ApiKeyUpdateNameDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Api Key name", "example": "testapiname" }
        },
        "required": ["name"]
      },
      "ApiKeyUpdateDateDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key start date",
            "example": "2023-07-07T20:26:41.200Z",
            "nullable": true
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Api Key end date",
            "example": "2024-04-28T17:48:58.284Z",
            "nullable": true
          }
        }
      },
      "UserRefreshSerialization": {
        "type": "object",
        "properties": {
          "tokenType": { "type": "string", "example": "Bearer", "nullable": false },
          "expiresIn": {
            "type": "string",
            "example": 1660190937231,
            "description": "Expire in timestamp",
            "nullable": false
          },
          "accessToken": {
            "type": "string",
            "example": "T3ttZRRxt22m1RnEzIwtVlJ1nOy9bz",
            "description": "Will be valid JWT Encode string",
            "nullable": false
          },
          "refreshToken": {
            "type": "string",
            "example": "d2jHbi33cGy6WCPJQWOy0M3l5bqo99",
            "description": "Will be valid JWT Encode string",
            "nullable": false
          }
        },
        "required": ["tokenType", "expiresIn", "accessToken", "refreshToken"]
      }
    }
  }
}
